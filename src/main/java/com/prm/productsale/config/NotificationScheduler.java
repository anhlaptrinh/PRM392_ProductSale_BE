package com.prm.productsale.config;
import com.prm.productsale.services.NotificationService;
import com.prm.productsale.services.UserFirebaseTokenService;
import com.prm.productsale.entity.UserFirebaseToken;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import java.util.List;
import com.prm.productsale.services.CartServices;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

@Component
public class NotificationScheduler {
    private final NotificationService notificationService;
    private final UserFirebaseTokenService tokenService;
    private final CartServices cartServices;
    public NotificationScheduler(NotificationService notificationService, UserFirebaseTokenService tokenService,CartServices cartServices) {
        this.notificationService = notificationService;
        this.tokenService = tokenService;
        this.cartServices = cartServices;

    }

    // G·ª≠i notification m·ªói 5 ph√∫t
    @Scheduled(fixedRate = 10000) // m·ªói 5 ph√∫t
    public void sendCartReminderNotification() {
        List<UserFirebaseToken> allTokens = tokenService.getAllTokens();

        for (UserFirebaseToken userToken : allTokens) {
            Long userId = userToken.getUserId();
            String token = userToken.getFcmToken();

            // G·ªçi ƒë·∫øn CartService ƒë·ªÉ l·∫•y s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè
            int cartCount = cartServices.getItemCountByUserId(userId);

            if (cartCount > 0) {
                String body = "B·∫°n c√≥ " + cartCount + " s·∫£n ph·∫©m trong gi·ªè h√†ng l√∫c " +
                        LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss"));
                String title = "üõí Nh·∫Øc nh·ªü gi·ªè h√†ng";

                notificationService.sendNotificationToToken(token, title, body);
            }
        }

        System.out.println("‚úÖ ƒê√£ g·ª≠i notification nh·∫Øc gi·ªè h√†ng ƒë·∫øn users c√≥ s·∫£n ph·∫©m trong gi·ªè.");
    }
}
